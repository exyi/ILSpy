<Application x:Class="ICSharpCode.ILSpy.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:aefolding="clr-namespace:ICSharpCode.AvalonEdit.Folding;assembly=ICSharpCode.AvalonEdit"
			 xmlns:vsm="clr-namespace:System.Windows;assembly=PresentationFramework"
             StartupUri="MainWindow.xaml">
	<Application.Resources>
		<Style x:Key="DialogWindow" TargetType="{x:Type Window}">
			<Setter Property="ShowInTaskbar" Value="False"/>
			<Setter Property="UseLayoutRounding" Value="True"/>
			<Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
		</Style>

		<Style TargetType="{x:Type Button}">
			<Setter Property="MinWidth" Value="73" />
			<Setter Property="Padding" Value="9,1,9,1" />
		</Style>
		<Style TargetType="{x:Type Menu}">
			<Setter Property="BorderBrush" Value="#2D2D30" />

		</Style>
		<Style TargetType="{x:Type MenuItem}">
			<Setter Property="BorderBrush" Value="#2D2D30" />
			<Setter Property="Background" Value="#2D2D30" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type MenuItem}">
						<Border x:Name="templateRoot" BorderBrush="#2D2D30" BorderThickness="{TemplateBinding BorderThickness}" Background="#2D2D30" SnapsToDevicePixels="True" VerticalAlignment="Center" Height="22">
							<Grid VerticalAlignment="Center">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
								<Path x:Name="GlyphPanel" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="3" Visibility="Collapsed" VerticalAlignment="Center"/>
								<ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
								<Popup x:Name="PART_Popup" AllowsTransparency="False" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom">
									<Border x:Name="SubMenuBorder" BorderBrush="#2D2D30" BorderThickness="1" Background="{TemplateBinding Background}" Padding="2">
										<ScrollViewer x:Name="SubMenuScrollViewer" Background="#2D2D30">
											<Grid RenderOptions.ClearTypeHint="Enabled">
												<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
													<Rectangle x:Name="OpaqueRect" Fill="#2D2D30" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
												</Canvas>
												<Rectangle Fill="#2D2D30" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
												<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
											</Grid>
										</ScrollViewer>
									</Border>
								</Popup>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSuspendingPopupAnimation" Value="True">
								<Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
							</Trigger>
							<Trigger Property="Icon" Value="{x:Null}">
								<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
							</Trigger>
							<Trigger Property="IsChecked" Value="True">
								<Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
								<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
							</Trigger>
							<Trigger Property="IsHighlighted" Value="True">
								<Setter Property="Background" TargetName="templateRoot" Value="#3D26A0DA"/>
								<Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
								<Setter Property="Fill" TargetName="GlyphPanel" Value="#FF707070"/>
							</Trigger>
							<Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
								<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
								<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--<Style TargetType="{x:Type ScrollViewer}">
			<Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
			<Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ScrollViewer}">
						<Grid SnapsToDevicePixels="True">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<Border Grid.Column="0" Grid.Row="1">
								<ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}"/>
							</Border>
							<RepeatButton Grid.Column="0" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="ScrollBar.LineUpCommand" Focusable="False" Grid.Row="0">
								<RepeatButton.Style>
									<Style TargetType="{x:Type RepeatButton}">
										<Setter Property="ClickMode" Value="Hover"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type RepeatButton}">
													<Border x:Name="templateRoot" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" SnapsToDevicePixels="True">
														<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="6" VerticalAlignment="Center"/>
													</Border>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</RepeatButton.Style>
								<RepeatButton.Visibility>
									<MultiBinding ConverterParameter="0" FallbackValue="Visibility.Collapsed" UpdateSourceTrigger="Default">
										<MultiBinding.Converter>
											<MenuScrollingVisibilityConverter/>
										</MultiBinding.Converter>
										<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
									</MultiBinding>
								</RepeatButton.Visibility>
								<Path Data="M0,4L3.5,0 7,4z" Fill="#FF212121"/>
							</RepeatButton>
							<RepeatButton Grid.Column="0" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="ScrollBar.LineDownCommand" Focusable="False" Grid.Row="2">
								<RepeatButton.Style>
									<Style TargetType="{x:Type RepeatButton}">
										<Setter Property="ClickMode" Value="Hover"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type RepeatButton}">
													<Border x:Name="templateRoot" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" SnapsToDevicePixels="True">
														<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="6" VerticalAlignment="Center"/>
													</Border>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</RepeatButton.Style>
								<RepeatButton.Visibility>
									<MultiBinding ConverterParameter="100" FallbackValue="Visibility.Collapsed" UpdateSourceTrigger="Default">
										<MultiBinding.Converter>
											<MenuScrollingVisibilityConverter/>
										</MultiBinding.Converter>
										<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
									</MultiBinding>
								</RepeatButton.Visibility>
								<Path Data="M0,0L3.5,4 7,0z" Fill="#FF212121"/>
							</RepeatButton>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>-->

		<Style TargetType="ScrollViewer">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ScrollViewer}">
						<Grid x:Name="Grid">
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition />
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<Rectangle x:Name="Corner" Grid.Column="1" Fill="#3E3E42" Grid.Row="1"/>
							<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.RowSpan="2" Margin="{TemplateBinding Padding}" Grid.ColumnSpan="2"/>
							<ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Width="16"/>
							<ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Height="16"/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>


		<!-- back: #3E3E42
			 button: #999999, hover: #1c97ea, click: #007ACC
			 rect: #686868, hover: #9E9E9E, drag: #efebef
		-->
		<Style TargetType="{x:Type ScrollBar}">
			<Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
			<Setter Property="Background" Value="#883E3E42"/>
			<Setter Property="BorderBrush" Value="#883E3E42"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="BorderThickness" Value="1,0"/>
			<Setter Property="Width" Value="18"/>
			<Setter Property="MinWidth" Value="8"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ScrollBar}">
						<Grid x:Name="Bg" SnapsToDevicePixels="True">
							<Grid.RowDefinitions>
								<RowDefinition MaxHeight="16"/>
								<RowDefinition Height="1E-05*"/>
								<RowDefinition MaxHeight="16"/>
							</Grid.RowDefinitions>
							<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1"/>
							<RepeatButton x:Name="PART_LineUpButton" Command="ScrollBar.LineUpCommand" IsEnabled="{TemplateBinding IsMouseOver}" Background="{TemplateBinding Background}">
								<RepeatButton.Style>
									<Style TargetType="{x:Type RepeatButton}">
										<Setter Property="FocusVisualStyle">
											<Setter.Value>
												<Style>
													<Setter Property="Control.Template">
														<Setter.Value>
															<ControlTemplate>
																<Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Setter.Value>
										</Setter>
										<Setter Property="BorderThickness" Value="0"/>
										<Setter Property="HorizontalContentAlignment" Value="Center"/>
										<Setter Property="VerticalContentAlignment" Value="Center"/>
										<Setter Property="Padding" Value="1"/>
										<Setter Property="Focusable" Value="False"/>
										<Setter Property="IsTabStop" Value="False"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type RepeatButton}">
													<Border x:Name="border" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
														<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
													</Border>
													<!--<ControlTemplate.Triggers>
														<Trigger Property="IsMouseOver" Value="True">
															<Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
															<Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
														</Trigger>
														<Trigger Property="IsPressed" Value="True">
															<Setter Property="Background" TargetName="border" Value="#FF606060"/>
															<Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
														</Trigger>
														<Trigger Property="IsEnabled" Value="False">
															<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
															<Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
															<Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
														</Trigger>
													</ControlTemplate.Triggers>-->
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</RepeatButton.Style>
								<Path x:Name="ArrowTop" Data="M0,4C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4z" Fill="#999999" Margin="3,4,3,3" Stretch="Uniform"/>
							</RepeatButton>
							<Track x:Name="PART_Track" IsDirectionReversed="True" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
								<Track.DecreaseRepeatButton>
									<RepeatButton Command="ScrollBar.PageUpCommand">
										<RepeatButton.Style>
											<Style TargetType="{x:Type RepeatButton}">
												<Setter Property="OverridesDefaultStyle" Value="True"/>
												<Setter Property="Background" Value="Transparent"/>
												<Setter Property="Focusable" Value="False"/>
												<Setter Property="IsTabStop" Value="False"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type RepeatButton}">
															<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</RepeatButton.Style>
									</RepeatButton>
								</Track.DecreaseRepeatButton>
								<Track.IncreaseRepeatButton>
									<RepeatButton Command="ScrollBar.PageDownCommand">
										<RepeatButton.Style>
											<Style TargetType="{x:Type RepeatButton}">
												<Setter Property="OverridesDefaultStyle" Value="True"/>
												<Setter Property="Background" Value="Transparent"/>
												<Setter Property="Focusable" Value="False"/>
												<Setter Property="IsTabStop" Value="False"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type RepeatButton}">
															<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</RepeatButton.Style>
									</RepeatButton>
								</Track.IncreaseRepeatButton>
								<Track.Thumb>
									<Thumb>
										<Thumb.Style>
											<Style TargetType="{x:Type Thumb}">
												<Setter Property="OverridesDefaultStyle" Value="True"/>
												<Setter Property="IsTabStop" Value="False"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type Thumb}">
															<Rectangle x:Name="rectangle" Fill="#686868" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="8"/>
															<ControlTemplate.Triggers>
																<Trigger Property="IsMouseOver" Value="True">
																	<Setter Property="Fill" TargetName="rectangle" Value="#9E9E9E"/>
																</Trigger>
																<Trigger Property="IsDragging" Value="True">
																	<Setter Property="Fill" TargetName="rectangle" Value="#efebef"/>
																</Trigger>
															</ControlTemplate.Triggers>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</Thumb.Style>
									</Thumb>
								</Track.Thumb>
							</Track>
							<RepeatButton x:Name="PART_LineDownButton" Command="ScrollBar.LineDownCommand" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Background="{TemplateBinding Background}">
								<RepeatButton.Style>
									<Style TargetType="{x:Type RepeatButton}">
										<Setter Property="FocusVisualStyle">
											<Setter.Value>
												<Style>
													<Setter Property="Control.Template">
														<Setter.Value>
															<ControlTemplate>
																<Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="#3E3E42" StrokeThickness="1" StrokeDashArray="1 2"/>
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Setter.Value>
										</Setter>
										<Setter Property="BorderThickness" Value="0"/>
										<Setter Property="HorizontalContentAlignment" Value="Center"/>
										<Setter Property="VerticalContentAlignment" Value="Center"/>
										<Setter Property="Padding" Value="1"/>
										<Setter Property="Focusable" Value="False"/>
										<Setter Property="IsTabStop" Value="False"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type RepeatButton}">
													<Border x:Name="border" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
														<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
													</Border>
													<!--<ControlTemplate.Triggers>
														<Trigger Property="IsMouseOver" Value="True">
															<Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
															<Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
														</Trigger>
														<Trigger Property="IsPressed" Value="True">
															<Setter Property="Background" TargetName="border" Value="#FF606060"/>
															<Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
														</Trigger>
														<Trigger Property="IsEnabled" Value="False">
															<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
															<Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
															<Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
														</Trigger>
													</ControlTemplate.Triggers>-->
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</RepeatButton.Style>
								<Path x:Name="ArrowBottom" Data="M0,2.5C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5z" Fill="#999999" Margin="3,4,3,3" Stretch="Uniform"/>
							</RepeatButton>
						</Grid>
						<ControlTemplate.Triggers>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
									<Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Fill" TargetName="ArrowBottom" Value="#007ACC"/>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
									<Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Fill" TargetName="ArrowTop" Value="#007ACC"/>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
									<Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Fill" TargetName="ArrowBottom" Value="#1c97ea"/>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
									<Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Fill" TargetName="ArrowTop" Value="#1c97ea"/>
							</MultiDataTrigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Fill" TargetName="ArrowTop" Value="#FFBFBFBF"/>
								<Setter Property="Fill" TargetName="ArrowBottom" Value="#FFBFBFBF"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="Orientation" Value="Horizontal">
					<Setter Property="Width" Value="Auto"/>
					<Setter Property="MinWidth" Value="0"/>
					<Setter Property="Height" Value="18"/>
					<Setter Property="MinHeight" Value="8"/>
					<Setter Property="BorderThickness" Value="0,1"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ScrollBar}">
								<Grid x:Name="Bg" SnapsToDevicePixels="True">
									<Grid.ColumnDefinitions>
										<ColumnDefinition MaxWidth="16"/>
										<ColumnDefinition Width="1E-05*"/>
										<ColumnDefinition MaxWidth="16"/>
									</Grid.ColumnDefinitions>
									<Border BorderBrush="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1"/>
									<RepeatButton x:Name="PART_LineLeftButton" Command="ScrollBar.LineLeftCommand" IsEnabled="{TemplateBinding IsMouseOver}" Background="{TemplateBinding Background}">
										<RepeatButton.Style>
											<Style TargetType="{x:Type RepeatButton}">
												<Setter Property="FocusVisualStyle">
													<Setter.Value>
														<Style>
															<Setter Property="Control.Template">
																<Setter.Value>
																	<ControlTemplate>
																		<Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
																	</ControlTemplate>
																</Setter.Value>
															</Setter>
														</Style>
													</Setter.Value>
												</Setter>
												<Setter Property="BorderThickness" Value="0"/>
												<Setter Property="HorizontalContentAlignment" Value="Center"/>
												<Setter Property="VerticalContentAlignment" Value="Center"/>
												<Setter Property="Padding" Value="1"/>
												<Setter Property="Focusable" Value="False"/>
												<Setter Property="IsTabStop" Value="False"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type RepeatButton}">
															<Border x:Name="border" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
																<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
															</Border>
															<!--<ControlTemplate.Triggers>
																<Trigger Property="IsMouseOver" Value="True">
																	<Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
																	<Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
																</Trigger>
																<Trigger Property="IsPressed" Value="True">
																	<Setter Property="Background" TargetName="border" Value="#FF606060"/>
																	<Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
																</Trigger>
																<Trigger Property="IsEnabled" Value="False">
																	<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
																	<Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
																	<Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
																</Trigger>
															</ControlTemplate.Triggers>-->
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</RepeatButton.Style>
										<Path x:Name="ArrowLeft" Data="M3.18,7C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7z" Fill="#999999" Margin="3" Stretch="Uniform"/>
									</RepeatButton>
									<Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
										<Track.DecreaseRepeatButton>
											<RepeatButton Command="ScrollBar.PageLeftCommand">
												<RepeatButton.Style>
													<Style TargetType="{x:Type RepeatButton}">
														<Setter Property="OverridesDefaultStyle" Value="True"/>
														<Setter Property="Background" Value="Transparent"/>
														<Setter Property="Focusable" Value="False"/>
														<Setter Property="IsTabStop" Value="False"/>
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type RepeatButton}">
																	<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</RepeatButton.Style>
											</RepeatButton>
										</Track.DecreaseRepeatButton>
										<Track.IncreaseRepeatButton>
											<RepeatButton Command="ScrollBar.PageRightCommand">
												<RepeatButton.Style>
													<Style TargetType="{x:Type RepeatButton}">
														<Setter Property="OverridesDefaultStyle" Value="True"/>
														<Setter Property="Background" Value="Transparent"/>
														<Setter Property="Focusable" Value="False"/>
														<Setter Property="IsTabStop" Value="False"/>
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type RepeatButton}">
																	<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</RepeatButton.Style>
											</RepeatButton>
										</Track.IncreaseRepeatButton>
										<Track.Thumb>
											<Thumb>
												<Thumb.Style>
													<Style TargetType="{x:Type Thumb}">
														<Setter Property="OverridesDefaultStyle" Value="True"/>
														<Setter Property="IsTabStop" Value="False"/>
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type Thumb}">
																	<Rectangle x:Name="rectangle" Fill="#686868" Height="8" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
																	<ControlTemplate.Triggers>
																		<Trigger Property="IsMouseOver" Value="True">
																			<Setter Property="Fill" TargetName="rectangle" Value="#9E9E9E"/>
																		</Trigger>
																		<Trigger Property="IsDragging" Value="True">
																			<Setter Property="Fill" TargetName="rectangle" Value="#efebef"/>
																		</Trigger>
																	</ControlTemplate.Triggers>
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</Thumb.Style>
											</Thumb>
										</Track.Thumb>
									</Track>
									<RepeatButton x:Name="PART_LineRightButton" Grid.Column="2" Command="ScrollBar.LineRightCommand" IsEnabled="{TemplateBinding IsMouseOver}" Background="{TemplateBinding Background}">
										<RepeatButton.Style>
											<Style TargetType="{x:Type RepeatButton}">
												<Setter Property="FocusVisualStyle">
													<Setter.Value>
														<Style>
															<Setter Property="Control.Template">
																<Setter.Value>
																	<ControlTemplate>
																		<Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="#3E3E42" StrokeThickness="1" StrokeDashArray="1 2"/>
																	</ControlTemplate>
																</Setter.Value>
															</Setter>
														</Style>
													</Setter.Value>
												</Setter>
												<Setter Property="BorderThickness" Value="0"/>
												<Setter Property="HorizontalContentAlignment" Value="Center"/>
												<Setter Property="VerticalContentAlignment" Value="Center"/>
												<Setter Property="Padding" Value="1"/>
												<Setter Property="Focusable" Value="False"/>
												<Setter Property="IsTabStop" Value="False"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type RepeatButton}">
															<Border x:Name="border" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
																<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
															</Border>
															<!--<ControlTemplate.Triggers>
																<Trigger Property="IsMouseOver" Value="True">
																	<Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
																	<Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
																</Trigger>
																<Trigger Property="IsPressed" Value="True">
																	<Setter Property="Background" TargetName="border" Value="#FF606060"/>
																	<Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
																</Trigger>
																<Trigger Property="IsEnabled" Value="False">
																	<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
																	<Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
																	<Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
																</Trigger>
															</ControlTemplate.Triggers>-->
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</RepeatButton.Style>
										<Path x:Name="ArrowRight" Data="M1.81,7C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7z" Fill="#999999" Margin="3" Stretch="Uniform"/>
									</RepeatButton>
								</Grid>
								<ControlTemplate.Triggers>
									<MultiDataTrigger>
										<MultiDataTrigger.Conditions>
											<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
											<Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true"/>
										</MultiDataTrigger.Conditions>
										<Setter Property="Fill" TargetName="ArrowRight" Value="#007ACC"/>
									</MultiDataTrigger>
									<MultiDataTrigger>
										<MultiDataTrigger.Conditions>
											<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
											<Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true"/>
										</MultiDataTrigger.Conditions>
										<Setter Property="Fill" TargetName="ArrowLeft" Value="#007ACC"/>
									</MultiDataTrigger>
									<MultiDataTrigger>
										<MultiDataTrigger.Conditions>
											<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
											<Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="false"/>
										</MultiDataTrigger.Conditions>
										<Setter Property="Fill" TargetName="ArrowRight" Value="#1c97ea"/>
									</MultiDataTrigger>
									<MultiDataTrigger>
										<MultiDataTrigger.Conditions>
											<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
											<Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="false"/>
										</MultiDataTrigger.Conditions>
										<Setter Property="Fill" TargetName="ArrowLeft" Value="#1c97ea"/>
									</MultiDataTrigger>
									<Trigger Property="IsEnabled" Value="False">
										<Setter Property="Fill" TargetName="ArrowLeft" Value="#FFBFBFBF"/>
										<Setter Property="Fill" TargetName="ArrowRight" Value="#FFBFBFBF"/>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Trigger>
			</Style.Triggers>
		</Style>


		<Style TargetType="{x:Type ComboBoxItem}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="Padding" Value="4,1"/>
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Background" Value="#2D2D30"/>
			<Setter Property="BorderBrush" Value="#2D2D30"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="FocusVisualStyle">
				<Setter.Value>
					<Style>
						<Setter Property="Control.Template">
							<Setter.Value>
								<ControlTemplate>
									<Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ComboBoxItem}">
						<Border x:Name="Bd" BorderBrush="#2D2D30" BorderThickness="{TemplateBinding BorderThickness}" Background="#2D2D30" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
							<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="TextElement.Foreground" TargetName="Bd" Value="#2D2D30"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="False"/>
									<Condition Property="IsMouseOver" Value="True"/>
									<Condition Property="IsKeyboardFocused" Value="False"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="#2D2D30"/>
								<Setter Property="BorderBrush" TargetName="Bd" Value="#A826A0DA"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="True"/>
									<Condition Property="IsMouseOver" Value="False"/>
									<Condition Property="IsKeyboardFocused" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="#2D2D30"/>
								<Setter Property="BorderBrush" TargetName="Bd" Value="#FF26A0DA"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="True"/>
									<Condition Property="IsMouseOver" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="#2D2D30"/>
								<Setter Property="BorderBrush" TargetName="Bd" Value="#99006CD9"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="True"/>
									<Condition Property="IsMouseOver" Value="False"/>
									<Condition Property="IsKeyboardFocused" Value="False"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="#2D2D30"/>
								<Setter Property="BorderBrush" TargetName="Bd" Value="#FFDADADA"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="False"/>
									<Condition Property="IsMouseOver" Value="False"/>
									<Condition Property="IsKeyboardFocused" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="BorderBrush" TargetName="Bd" Value="#FF26A0DA"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="False"/>
									<Condition Property="IsMouseOver" Value="True"/>
									<Condition Property="IsKeyboardFocused" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="#2D2D30"/>
								<Setter Property="BorderBrush" TargetName="Bd" Value="#FF26A0DA"/>
							</MultiTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition Width="20" />
				</Grid.ColumnDefinitions>
				<Border
      x:Name="Border" 
      Grid.ColumnSpan="2"
      CornerRadius="2"
      Background="#2D2D30"
      BorderBrush="#2D2D30"
      BorderThickness="1" />
				<Border 
      Grid.Column="0"
      CornerRadius="2,0,0,2" 
      Margin="1" 
      Background="#2D2D30" 
      BorderBrush="#2D2D30"
      BorderThickness="0,0,1,0" />
				<Path 
      x:Name="Arrow"
      Grid.Column="1"     
      Fill="#dcdcdc"
      HorizontalAlignment="Center"
      VerticalAlignment="Center"
      Data="M 0 0 L 4 4 L 8 0 Z"/>
			</Grid>
			<ControlTemplate.Triggers>
				<Trigger Property="ToggleButton.IsMouseOver" Value="true">
					<Setter TargetName="Border" Property="Background" Value="#2D2D30" />
				</Trigger>
				<Trigger Property="ToggleButton.IsChecked" Value="true">
					<Setter TargetName="Border" Property="Background" Value="#2D2D30" />
				</Trigger>
				<Trigger Property="IsEnabled" Value="False">
					<Setter TargetName="Border" Property="Background" Value="#2D2D30" />
					<Setter TargetName="Border" Property="BorderBrush" Value="#2D2D30" />
					<Setter Property="Foreground" Value="#2D2D30"/>
					<Setter TargetName="Arrow" Property="Fill" Value="#2D2D30" />
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>

		<ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
			<Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
		</ControlTemplate>

		<Style x:Key="{x:Type ComboBox}" TargetType="ComboBox">
			<Setter Property="SnapsToDevicePixels" Value="true"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
			<Setter Property="MinWidth" Value="120"/>
			<Setter Property="MinHeight" Value="20"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ComboBox">
						<Grid>
							<ToggleButton 
            Name="ToggleButton" 
            Template="{StaticResource ComboBoxToggleButton}" 
            Grid.Column="2" 
            Focusable="false"
            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
            ClickMode="Press">
							</ToggleButton>
							<ContentPresenter
            Name="ContentSite"
            IsHitTestVisible="False" 
            Content="{TemplateBinding SelectionBoxItem}"
            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
            Margin="3,3,23,3"
            VerticalAlignment="Center"
            HorizontalAlignment="Left" />
							<TextBox x:Name="PART_EditableTextBox"
            Style="{x:Null}" 
            Template="{StaticResource ComboBoxTextBox}" 
            HorizontalAlignment="Left" 
            VerticalAlignment="Center" 
            Margin="3,3,23,3"
            Focusable="True" 
            Background="Transparent"
            Visibility="Hidden"
            IsReadOnly="{TemplateBinding IsReadOnly}"/>
							<Popup 
            Name="Popup"
            Placement="Bottom"
            IsOpen="{TemplateBinding IsDropDownOpen}"
            AllowsTransparency="True" 
            Focusable="False"
            PopupAnimation="Slide">
								<Grid 
              Name="DropDown"
              SnapsToDevicePixels="True"                
              MinWidth="{TemplateBinding ActualWidth}"
              MaxHeight="{TemplateBinding MaxDropDownHeight}">
									<Border 
                x:Name="DropDownBorder"
                Background="#2D2D30"
                BorderThickness="1"
                BorderBrush="#2D2D30"/>
									<ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
										<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
									</ScrollViewer>
								</Grid>
							</Popup>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="HasItems" Value="false">
								<Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
							</Trigger>
							<Trigger Property="IsGrouping" Value="true">
								<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
							</Trigger>
							<Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
								<Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
								<Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
							</Trigger>
							<Trigger Property="IsEditable" Value="true">
								<Setter Property="IsTabStop" Value="false"/>
								<Setter TargetName="PART_EditableTextBox" Property="Visibility"    Value="Visible"/>
								<Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
			</Style.Triggers>
		</Style>

		<Style x:Key="{x:Type aefolding:FoldingMargin}" TargetType="aefolding:FoldingMargin">
			<Setter Property="FoldingMarkerBrush" Value="#dcdcdc" />
			<Setter Property="SelectedFoldingMarkerBrush" Value="#dcdcdc" />
			<Setter Property="FoldingMarkerBackgroundBrush" Value="#2D2D30" />
			<Setter Property="SelectedFoldingMarkerBackgroundBrush" Value="#2D2D30" />
		</Style>
		
	</Application.Resources>
</Application>